const HtmlWebpackPlugin = require('html-webpack-plugin');
const webpack = require('webpack');
const merge = require('webpack-merge');
const TsconfigPathsPlugin = require('tsconfig-paths-webpack-plugin');

const commonMainConfig = require('../webpack.common');

const { realPath } = require('../../utils');
const { port, host } = require('../../config');

module.exports = merge.smart(commonMainConfig, {
  mode: 'development',
  watch: true,
  entry: realPath('src/index.tsx'),
  target: 'web',
  plugins: [
    new HtmlWebpackPlugin({
      template: realPath('public/index.html'),
    }),
    new webpack.HotModuleReplacementPlugin(),
  ],
  module: {
    rules: [
      {
        test: /.(js|ts|tsx)$/,
        exclude: /node_modules/,
        use: [
          {
            loader: '@sucrase/webpack-loader',
            options: {
              transforms: ['jsx', 'typescript', 'imports'],
            },
          },
        ],
      },
    ],
  },
  devtool: 'source-map',
  devServer: {
    host,
    port,
    hot: true,
    publicPath: '/',
    historyApiFallback: true,
    disableHostCheck: true,
    overlay: true,
    quiet: true,
  },
  resolve: {
    extensions: ['.ts', '.tsx'],
    plugins: [new TsconfigPathsPlugin()],
  },
});
