const ClearWebpackPlugin = require('clean-webpack-plugin');
const HtmlWebpackPlugin = require('html-webpack-plugin');
const ProgressBarPlugin = require('progress-bar-webpack-plugin');
const babelPresetEnv = require('@babel/preset-env');
const babelPresetReact = require('@babel/preset-react');
const babelTransformRuntime = require('@babel/plugin-transform-runtime');
const babelDynamicImports = require('@babel/plugin-syntax-dynamic-import');
const babelProposalClassProperties = require('@babel/plugin-proposal-class-properties');
const merge = require('webpack-merge');

const commonMainConfig = require('../webpack.common');

const { realPath } = require('../../utils');

module.exports = merge.smart(commonMainConfig, {
  entry: realPath('src/index.js'),
  mode: 'production',
  target: 'web',
  output: {
    filename: 'bundle.[name].js',
    chunkFilename: 'chunk.[name].js',
  },
  module: {
    rules: [
      {
        test: /\.jsx?$/,
        exclude: /node_modules/,
        use: {
          loader: 'babel-loader',
          options: {
            presets: [babelPresetEnv, babelPresetReact],
            plugins: [
              babelDynamicImports,
              babelProposalClassProperties,
              babelTransformRuntime,
            ],
          },
        },
      },
    ],
  },
  plugins: [
    new ClearWebpackPlugin(),
    new HtmlWebpackPlugin({
      template: realPath('public/index.html'),
    }),
    new ProgressBarPlugin({
      summary: false,
    }),
  ],
  resolve: {
    alias: {
      '~': realPath('./src'),
    },
  },
  devtool: 'source-map',
});
