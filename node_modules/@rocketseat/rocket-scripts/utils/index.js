const fs = require('fs');
const chalk = require('chalk');
const dotenv = require('dotenv');

const { log } = console;

const helpers = {
  realPath(relative) {
    return `${fs.realpathSync(process.cwd())}/${relative}`;
  },
  extractRealPath(path) {
    const realPath = fs.realpathSync(process.cwd());
    return path.split(realPath)[1];
  },
  existFile(relative) {
    return fs.existsSync(helpers.realPath(relative));
  },
  checkEntryFile(mode) {
    const { realPath } = helpers;

    const path = realPath('src');
    const jsFile = `${path}/index.js`;
    const tsxFile = `${path}/index.tsx`;

    if (mode === 'javascript') {
      const exists = fs.existsSync(jsFile);

      if (!exists) {
        log(chalk.red('Entry file src/index.js not found \n'));

        if (fs.existsSync(tsxFile)) {
          log(`A ${chalk.cyan('typescript')} file was found instead. Did you mean to run with the ${chalk.cyan('--typescript')} flag?`);
        }

        process.exit(0);
      }
    } else {
      const exists = fs.existsSync(tsxFile);

      if (!exists) {
        log(chalk.red('Entry file src/index.tsx not found \n'));

        if (fs.existsSync(jsFile)) {
          log(`A ${chalk.yellow('javascript')} file was found instead. Try removing the ${chalk.cyan('--typescript')} flag when running rocket-scripts`);
        }

        process.exit(0);
      }
    }
  },
  loadEnv() {
    const { realPath } = helpers;

    const envPath = realPath('.env');

    if (fs.existsSync(envPath)) {
      dotenv.config({
        path: envPath,
      });
    }
  },
  getEnvironmentValues() {
    const result = {
      'process.env': Object.keys(process.env).reduce((env, key) => {
        const obj = env;
        obj[key] = JSON.stringify(process.env[key]);

        return obj;
      }, {}),
    };

    return result;
  },
};

module.exports = helpers;
